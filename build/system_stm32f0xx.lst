ARM GAS  C:\Users\PcLokcer\AppData\Local\Temp\ccbBgzfi.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"system_stm32f0xx.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.SystemInit,"ax",%progbits
  16              		.align	1
  17              		.global	SystemInit
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	SystemInit:
  25              	.LFB40:
  26              		.file 1 "Core/Src/system_stm32f0xx.c"
   1:Core/Src/system_stm32f0xx.c **** /**
   2:Core/Src/system_stm32f0xx.c ****   ******************************************************************************
   3:Core/Src/system_stm32f0xx.c ****   * @file    system_stm32f0xx.c
   4:Core/Src/system_stm32f0xx.c ****   * @author  MCD Application Team
   5:Core/Src/system_stm32f0xx.c ****   * @brief   CMSIS Cortex-M0 Device Peripheral Access Layer System Source File.
   6:Core/Src/system_stm32f0xx.c ****   *
   7:Core/Src/system_stm32f0xx.c ****   * 1. This file provides two functions and one global variable to be called from
   8:Core/Src/system_stm32f0xx.c ****   *    user application:
   9:Core/Src/system_stm32f0xx.c ****   *      - SystemInit(): This function is called at startup just after reset and 
  10:Core/Src/system_stm32f0xx.c ****   *                      before branch to main program. This call is made inside
  11:Core/Src/system_stm32f0xx.c ****   *                      the "startup_stm32f0xx.s" file.
  12:Core/Src/system_stm32f0xx.c ****   *
  13:Core/Src/system_stm32f0xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:Core/Src/system_stm32f0xx.c ****   *                                  by the user application to setup the SysTick
  15:Core/Src/system_stm32f0xx.c ****   *                                  timer or configure other parameters.
  16:Core/Src/system_stm32f0xx.c ****   *
  17:Core/Src/system_stm32f0xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Core/Src/system_stm32f0xx.c ****   *                                 be called whenever the core clock is changed
  19:Core/Src/system_stm32f0xx.c ****   *                                 during program execution.
  20:Core/Src/system_stm32f0xx.c ****   *
  21:Core/Src/system_stm32f0xx.c ****   *
  22:Core/Src/system_stm32f0xx.c ****   ******************************************************************************
  23:Core/Src/system_stm32f0xx.c ****   * @attention
  24:Core/Src/system_stm32f0xx.c ****   *
  25:Core/Src/system_stm32f0xx.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  26:Core/Src/system_stm32f0xx.c ****   * All rights reserved.</center></h2>
  27:Core/Src/system_stm32f0xx.c ****   *
  28:Core/Src/system_stm32f0xx.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  29:Core/Src/system_stm32f0xx.c ****   * the "License"; You may not use this file except in compliance with the
  30:Core/Src/system_stm32f0xx.c ****   * License. You may obtain a copy of the License at:
  31:Core/Src/system_stm32f0xx.c ****   *                        opensource.org/licenses/BSD-3-Clause
  32:Core/Src/system_stm32f0xx.c ****   *
ARM GAS  C:\Users\PcLokcer\AppData\Local\Temp\ccbBgzfi.s 			page 2


  33:Core/Src/system_stm32f0xx.c ****   ******************************************************************************
  34:Core/Src/system_stm32f0xx.c ****   */
  35:Core/Src/system_stm32f0xx.c **** 
  36:Core/Src/system_stm32f0xx.c **** /** @addtogroup CMSIS
  37:Core/Src/system_stm32f0xx.c ****   * @{
  38:Core/Src/system_stm32f0xx.c ****   */
  39:Core/Src/system_stm32f0xx.c **** 
  40:Core/Src/system_stm32f0xx.c **** /** @addtogroup stm32f0xx_system
  41:Core/Src/system_stm32f0xx.c ****   * @{
  42:Core/Src/system_stm32f0xx.c ****   */
  43:Core/Src/system_stm32f0xx.c **** 
  44:Core/Src/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_Includes
  45:Core/Src/system_stm32f0xx.c ****   * @{
  46:Core/Src/system_stm32f0xx.c ****   */
  47:Core/Src/system_stm32f0xx.c **** 
  48:Core/Src/system_stm32f0xx.c **** #include "stm32f0xx.h"
  49:Core/Src/system_stm32f0xx.c **** 
  50:Core/Src/system_stm32f0xx.c **** /**
  51:Core/Src/system_stm32f0xx.c ****   * @}
  52:Core/Src/system_stm32f0xx.c ****   */
  53:Core/Src/system_stm32f0xx.c **** 
  54:Core/Src/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_TypesDefinitions
  55:Core/Src/system_stm32f0xx.c ****   * @{
  56:Core/Src/system_stm32f0xx.c ****   */
  57:Core/Src/system_stm32f0xx.c **** 
  58:Core/Src/system_stm32f0xx.c **** /**
  59:Core/Src/system_stm32f0xx.c ****   * @}
  60:Core/Src/system_stm32f0xx.c ****   */
  61:Core/Src/system_stm32f0xx.c **** 
  62:Core/Src/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_Defines
  63:Core/Src/system_stm32f0xx.c ****   * @{
  64:Core/Src/system_stm32f0xx.c ****   */
  65:Core/Src/system_stm32f0xx.c **** #if !defined  (HSE_VALUE) 
  66:Core/Src/system_stm32f0xx.c ****   #define HSE_VALUE    ((uint32_t)8000000) /*!< Default value of the External oscillator in Hz.
  67:Core/Src/system_stm32f0xx.c ****                                                 This value can be provided and adapted by the user 
  68:Core/Src/system_stm32f0xx.c **** #endif /* HSE_VALUE */
  69:Core/Src/system_stm32f0xx.c **** 
  70:Core/Src/system_stm32f0xx.c **** #if !defined  (HSI_VALUE)
  71:Core/Src/system_stm32f0xx.c ****   #define HSI_VALUE    ((uint32_t)8000000) /*!< Default value of the Internal oscillator in Hz.
  72:Core/Src/system_stm32f0xx.c ****                                                 This value can be provided and adapted by the user 
  73:Core/Src/system_stm32f0xx.c **** #endif /* HSI_VALUE */
  74:Core/Src/system_stm32f0xx.c **** 
  75:Core/Src/system_stm32f0xx.c **** #if !defined (HSI48_VALUE)
  76:Core/Src/system_stm32f0xx.c **** #define HSI48_VALUE    ((uint32_t)48000000) /*!< Default value of the HSI48 Internal oscillator in 
  77:Core/Src/system_stm32f0xx.c ****                                                  This value can be provided and adapted by the user
  78:Core/Src/system_stm32f0xx.c **** #endif /* HSI48_VALUE */
  79:Core/Src/system_stm32f0xx.c **** /**
  80:Core/Src/system_stm32f0xx.c ****   * @}
  81:Core/Src/system_stm32f0xx.c ****   */
  82:Core/Src/system_stm32f0xx.c **** 
  83:Core/Src/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_Macros
  84:Core/Src/system_stm32f0xx.c ****   * @{
  85:Core/Src/system_stm32f0xx.c ****   */
  86:Core/Src/system_stm32f0xx.c **** 
  87:Core/Src/system_stm32f0xx.c **** /**
  88:Core/Src/system_stm32f0xx.c ****   * @}
  89:Core/Src/system_stm32f0xx.c ****   */
ARM GAS  C:\Users\PcLokcer\AppData\Local\Temp\ccbBgzfi.s 			page 3


  90:Core/Src/system_stm32f0xx.c **** 
  91:Core/Src/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_Variables
  92:Core/Src/system_stm32f0xx.c ****   * @{
  93:Core/Src/system_stm32f0xx.c ****   */
  94:Core/Src/system_stm32f0xx.c ****   /* This variable is updated in three ways:
  95:Core/Src/system_stm32f0xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
  96:Core/Src/system_stm32f0xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
  97:Core/Src/system_stm32f0xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
  98:Core/Src/system_stm32f0xx.c ****          Note: If you use this function to configure the system clock; then there
  99:Core/Src/system_stm32f0xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 100:Core/Src/system_stm32f0xx.c ****                variable is updated automatically.
 101:Core/Src/system_stm32f0xx.c ****   */
 102:Core/Src/system_stm32f0xx.c **** uint32_t SystemCoreClock = 8000000;
 103:Core/Src/system_stm32f0xx.c **** 
 104:Core/Src/system_stm32f0xx.c **** const uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 105:Core/Src/system_stm32f0xx.c **** const uint8_t APBPrescTable[8]  = {0, 0, 0, 0, 1, 2, 3, 4};
 106:Core/Src/system_stm32f0xx.c **** 
 107:Core/Src/system_stm32f0xx.c **** /**
 108:Core/Src/system_stm32f0xx.c ****   * @}
 109:Core/Src/system_stm32f0xx.c ****   */
 110:Core/Src/system_stm32f0xx.c **** 
 111:Core/Src/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_FunctionPrototypes
 112:Core/Src/system_stm32f0xx.c ****   * @{
 113:Core/Src/system_stm32f0xx.c ****   */
 114:Core/Src/system_stm32f0xx.c **** 
 115:Core/Src/system_stm32f0xx.c **** /**
 116:Core/Src/system_stm32f0xx.c ****   * @}
 117:Core/Src/system_stm32f0xx.c ****   */
 118:Core/Src/system_stm32f0xx.c **** 
 119:Core/Src/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_Functions
 120:Core/Src/system_stm32f0xx.c ****   * @{
 121:Core/Src/system_stm32f0xx.c ****   */
 122:Core/Src/system_stm32f0xx.c **** 
 123:Core/Src/system_stm32f0xx.c **** /**
 124:Core/Src/system_stm32f0xx.c ****   * @brief  Setup the microcontroller system
 125:Core/Src/system_stm32f0xx.c ****   * @param  None
 126:Core/Src/system_stm32f0xx.c ****   * @retval None
 127:Core/Src/system_stm32f0xx.c ****   */
 128:Core/Src/system_stm32f0xx.c **** void SystemInit(void)
 129:Core/Src/system_stm32f0xx.c **** {
  27              		.loc 1 129 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 130:Core/Src/system_stm32f0xx.c ****   /* NOTE :SystemInit(): This function is called at startup just after reset and 
 131:Core/Src/system_stm32f0xx.c ****                          before branch to main program. This call is made inside
 132:Core/Src/system_stm32f0xx.c ****                          the "startup_stm32f0xx.s" file.
 133:Core/Src/system_stm32f0xx.c ****                          User can setups the default system clock (System clock source, PLL Multipl
 134:Core/Src/system_stm32f0xx.c ****                          and Divider factors, AHB/APBx prescalers and Flash settings).
 135:Core/Src/system_stm32f0xx.c ****    */
 136:Core/Src/system_stm32f0xx.c **** }
  32              		.loc 1 136 1 view .LVU1
  33              		@ sp needed
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE40:
ARM GAS  C:\Users\PcLokcer\AppData\Local\Temp\ccbBgzfi.s 			page 4


  38              		.global	__aeabi_uidiv
  39              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  40              		.align	1
  41              		.global	SystemCoreClockUpdate
  42              		.syntax unified
  43              		.code	16
  44              		.thumb_func
  45              		.fpu softvfp
  47              	SystemCoreClockUpdate:
  48              	.LFB41:
 137:Core/Src/system_stm32f0xx.c **** 
 138:Core/Src/system_stm32f0xx.c **** /**
 139:Core/Src/system_stm32f0xx.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 140:Core/Src/system_stm32f0xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 141:Core/Src/system_stm32f0xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 142:Core/Src/system_stm32f0xx.c ****   *         other parameters.
 143:Core/Src/system_stm32f0xx.c ****   *
 144:Core/Src/system_stm32f0xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 145:Core/Src/system_stm32f0xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 146:Core/Src/system_stm32f0xx.c ****   *         based on this variable will be incorrect.
 147:Core/Src/system_stm32f0xx.c ****   *
 148:Core/Src/system_stm32f0xx.c ****   * @note   - The system frequency computed by this function is not the real
 149:Core/Src/system_stm32f0xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 150:Core/Src/system_stm32f0xx.c ****   *           constant and the selected clock source:
 151:Core/Src/system_stm32f0xx.c ****   *
 152:Core/Src/system_stm32f0xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 153:Core/Src/system_stm32f0xx.c ****   *
 154:Core/Src/system_stm32f0xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 155:Core/Src/system_stm32f0xx.c ****   *
 156:Core/Src/system_stm32f0xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**)
 157:Core/Src/system_stm32f0xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 158:Core/Src/system_stm32f0xx.c ****   *
 159:Core/Src/system_stm32f0xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f0xx_hal_conf.h file (default value
 160:Core/Src/system_stm32f0xx.c ****   *             8 MHz) but the real value may vary depending on the variations
 161:Core/Src/system_stm32f0xx.c ****   *             in voltage and temperature.
 162:Core/Src/system_stm32f0xx.c ****   *
 163:Core/Src/system_stm32f0xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f0xx_hal_conf.h file (its value
 164:Core/Src/system_stm32f0xx.c ****   *              depends on the application requirements), user has to ensure that HSE_VALUE
 165:Core/Src/system_stm32f0xx.c ****   *              is same as the real frequency of the crystal used. Otherwise, this function
 166:Core/Src/system_stm32f0xx.c ****   *              may have wrong result.
 167:Core/Src/system_stm32f0xx.c ****   *
 168:Core/Src/system_stm32f0xx.c ****   *         - The result of this function could be not correct when using fractional
 169:Core/Src/system_stm32f0xx.c ****   *           value for HSE crystal.
 170:Core/Src/system_stm32f0xx.c ****   *
 171:Core/Src/system_stm32f0xx.c ****   * @param  None
 172:Core/Src/system_stm32f0xx.c ****   * @retval None
 173:Core/Src/system_stm32f0xx.c ****   */
 174:Core/Src/system_stm32f0xx.c **** void SystemCoreClockUpdate (void)
 175:Core/Src/system_stm32f0xx.c **** {
  49              		.loc 1 175 1 view -0
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53 0000 10B5     		push	{r4, lr}
  54              	.LCFI0:
  55              		.cfi_def_cfa_offset 8
  56              		.cfi_offset 4, -8
ARM GAS  C:\Users\PcLokcer\AppData\Local\Temp\ccbBgzfi.s 			page 5


  57              		.cfi_offset 14, -4
 176:Core/Src/system_stm32f0xx.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0, predivfactor = 0;
  58              		.loc 1 176 3 view .LVU3
  59              	.LVL0:
 177:Core/Src/system_stm32f0xx.c **** 
 178:Core/Src/system_stm32f0xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 179:Core/Src/system_stm32f0xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
  60              		.loc 1 179 3 view .LVU4
  61              		.loc 1 179 12 is_stmt 0 view .LVU5
  62 0002 1F4B     		ldr	r3, .L9
  63 0004 5A68     		ldr	r2, [r3, #4]
  64              		.loc 1 179 7 view .LVU6
  65 0006 0C23     		movs	r3, #12
  66 0008 1340     		ands	r3, r2
  67              	.LVL1:
 180:Core/Src/system_stm32f0xx.c **** 
 181:Core/Src/system_stm32f0xx.c ****   switch (tmp)
  68              		.loc 1 181 3 is_stmt 1 view .LVU7
  69 000a 042B     		cmp	r3, #4
  70 000c 16D0     		beq	.L3
  71 000e 082B     		cmp	r3, #8
  72 0010 18D0     		beq	.L4
  73 0012 002B     		cmp	r3, #0
  74 0014 03D0     		beq	.L8
 182:Core/Src/system_stm32f0xx.c ****   {
 183:Core/Src/system_stm32f0xx.c ****     case RCC_CFGR_SWS_HSI:  /* HSI used as system clock */
 184:Core/Src/system_stm32f0xx.c ****       SystemCoreClock = HSI_VALUE;
 185:Core/Src/system_stm32f0xx.c ****       break;
 186:Core/Src/system_stm32f0xx.c ****     case RCC_CFGR_SWS_HSE:  /* HSE used as system clock */
 187:Core/Src/system_stm32f0xx.c ****       SystemCoreClock = HSE_VALUE;
 188:Core/Src/system_stm32f0xx.c ****       break;
 189:Core/Src/system_stm32f0xx.c ****     case RCC_CFGR_SWS_PLL:  /* PLL used as system clock */
 190:Core/Src/system_stm32f0xx.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 191:Core/Src/system_stm32f0xx.c ****       pllmull = RCC->CFGR & RCC_CFGR_PLLMUL;
 192:Core/Src/system_stm32f0xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 193:Core/Src/system_stm32f0xx.c ****       pllmull = ( pllmull >> 18) + 2;
 194:Core/Src/system_stm32f0xx.c ****       predivfactor = (RCC->CFGR2 & RCC_CFGR2_PREDIV) + 1;
 195:Core/Src/system_stm32f0xx.c **** 
 196:Core/Src/system_stm32f0xx.c ****       if (pllsource == RCC_CFGR_PLLSRC_HSE_PREDIV)
 197:Core/Src/system_stm32f0xx.c ****       {
 198:Core/Src/system_stm32f0xx.c ****         /* HSE used as PLL clock source : SystemCoreClock = HSE/PREDIV * PLLMUL */
 199:Core/Src/system_stm32f0xx.c ****         SystemCoreClock = (HSE_VALUE/predivfactor) * pllmull;
 200:Core/Src/system_stm32f0xx.c ****       }
 201:Core/Src/system_stm32f0xx.c **** #if defined(STM32F042x6) || defined(STM32F048xx) || defined(STM32F072xB) || defined(STM32F078xx) ||
 202:Core/Src/system_stm32f0xx.c ****       else if (pllsource == RCC_CFGR_PLLSRC_HSI48_PREDIV)
 203:Core/Src/system_stm32f0xx.c ****       {
 204:Core/Src/system_stm32f0xx.c ****         /* HSI48 used as PLL clock source : SystemCoreClock = HSI48/PREDIV * PLLMUL */
 205:Core/Src/system_stm32f0xx.c ****         SystemCoreClock = (HSI48_VALUE/predivfactor) * pllmull;
 206:Core/Src/system_stm32f0xx.c ****       }
 207:Core/Src/system_stm32f0xx.c **** #endif /* STM32F042x6 || STM32F048xx || STM32F072xB || STM32F078xx || STM32F091xC || STM32F098xx */
 208:Core/Src/system_stm32f0xx.c ****       else
 209:Core/Src/system_stm32f0xx.c ****       {
 210:Core/Src/system_stm32f0xx.c **** #if defined(STM32F042x6) || defined(STM32F048xx)  || defined(STM32F070x6) \
 211:Core/Src/system_stm32f0xx.c ****  || defined(STM32F078xx) || defined(STM32F071xB)  || defined(STM32F072xB) \
 212:Core/Src/system_stm32f0xx.c ****  || defined(STM32F070xB) || defined(STM32F091xC) || defined(STM32F098xx)  || defined(STM32F030xC)
 213:Core/Src/system_stm32f0xx.c ****         /* HSI used as PLL clock source : SystemCoreClock = HSI/PREDIV * PLLMUL */
 214:Core/Src/system_stm32f0xx.c ****         SystemCoreClock = (HSI_VALUE/predivfactor) * pllmull;
ARM GAS  C:\Users\PcLokcer\AppData\Local\Temp\ccbBgzfi.s 			page 6


 215:Core/Src/system_stm32f0xx.c **** #else
 216:Core/Src/system_stm32f0xx.c ****         /* HSI used as PLL clock source : SystemCoreClock = HSI/2 * PLLMUL */
 217:Core/Src/system_stm32f0xx.c ****         SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
 218:Core/Src/system_stm32f0xx.c **** #endif /* STM32F042x6 || STM32F048xx || STM32F070x6 || 
 219:Core/Src/system_stm32f0xx.c ****           STM32F071xB || STM32F072xB || STM32F078xx || STM32F070xB ||
 220:Core/Src/system_stm32f0xx.c ****           STM32F091xC || STM32F098xx || STM32F030xC */
 221:Core/Src/system_stm32f0xx.c ****       }
 222:Core/Src/system_stm32f0xx.c ****       break;
 223:Core/Src/system_stm32f0xx.c ****     default: /* HSI used as system clock */
 224:Core/Src/system_stm32f0xx.c ****       SystemCoreClock = HSI_VALUE;
  75              		.loc 1 224 7 view .LVU8
  76              		.loc 1 224 23 is_stmt 0 view .LVU9
  77 0016 1B4B     		ldr	r3, .L9+4
  78              	.LVL2:
  79              		.loc 1 224 23 view .LVU10
  80 0018 1B4A     		ldr	r2, .L9+8
  81              	.LVL3:
  82              		.loc 1 224 23 view .LVU11
  83 001a 1A60     		str	r2, [r3]
 225:Core/Src/system_stm32f0xx.c ****       break;
  84              		.loc 1 225 7 is_stmt 1 view .LVU12
  85 001c 02E0     		b	.L6
  86              	.LVL4:
  87              	.L8:
 184:Core/Src/system_stm32f0xx.c ****       break;
  88              		.loc 1 184 7 view .LVU13
 184:Core/Src/system_stm32f0xx.c ****       break;
  89              		.loc 1 184 23 is_stmt 0 view .LVU14
  90 001e 194B     		ldr	r3, .L9+4
  91              	.LVL5:
 184:Core/Src/system_stm32f0xx.c ****       break;
  92              		.loc 1 184 23 view .LVU15
  93 0020 194A     		ldr	r2, .L9+8
  94              	.LVL6:
 184:Core/Src/system_stm32f0xx.c ****       break;
  95              		.loc 1 184 23 view .LVU16
  96 0022 1A60     		str	r2, [r3]
 185:Core/Src/system_stm32f0xx.c ****     case RCC_CFGR_SWS_HSE:  /* HSE used as system clock */
  97              		.loc 1 185 7 is_stmt 1 view .LVU17
  98              	.LVL7:
  99              	.L6:
 226:Core/Src/system_stm32f0xx.c ****   }
 227:Core/Src/system_stm32f0xx.c ****   /* Compute HCLK clock frequency ----------------*/
 228:Core/Src/system_stm32f0xx.c ****   /* Get HCLK prescaler */
 229:Core/Src/system_stm32f0xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 100              		.loc 1 229 3 view .LVU18
 101              		.loc 1 229 28 is_stmt 0 view .LVU19
 102 0024 164B     		ldr	r3, .L9
 103 0026 5A68     		ldr	r2, [r3, #4]
 104              		.loc 1 229 52 view .LVU20
 105 0028 1209     		lsrs	r2, r2, #4
 106 002a 0F23     		movs	r3, #15
 107 002c 1340     		ands	r3, r2
 108              		.loc 1 229 22 view .LVU21
 109 002e 174A     		ldr	r2, .L9+12
 110 0030 D35C     		ldrb	r3, [r2, r3]
 111              	.LVL8:
ARM GAS  C:\Users\PcLokcer\AppData\Local\Temp\ccbBgzfi.s 			page 7


 230:Core/Src/system_stm32f0xx.c ****   /* HCLK clock frequency */
 231:Core/Src/system_stm32f0xx.c ****   SystemCoreClock >>= tmp;
 112              		.loc 1 231 3 is_stmt 1 view .LVU22
 113              		.loc 1 231 19 is_stmt 0 view .LVU23
 114 0032 144A     		ldr	r2, .L9+4
 115 0034 1168     		ldr	r1, [r2]
 116 0036 D940     		lsrs	r1, r1, r3
 117 0038 1160     		str	r1, [r2]
 232:Core/Src/system_stm32f0xx.c **** }
 118              		.loc 1 232 1 view .LVU24
 119              		@ sp needed
 120 003a 10BD     		pop	{r4, pc}
 121              	.LVL9:
 122              	.L3:
 187:Core/Src/system_stm32f0xx.c ****       break;
 123              		.loc 1 187 7 is_stmt 1 view .LVU25
 187:Core/Src/system_stm32f0xx.c ****       break;
 124              		.loc 1 187 23 is_stmt 0 view .LVU26
 125 003c 114B     		ldr	r3, .L9+4
 126              	.LVL10:
 187:Core/Src/system_stm32f0xx.c ****       break;
 127              		.loc 1 187 23 view .LVU27
 128 003e 124A     		ldr	r2, .L9+8
 129              	.LVL11:
 187:Core/Src/system_stm32f0xx.c ****       break;
 130              		.loc 1 187 23 view .LVU28
 131 0040 1A60     		str	r2, [r3]
 188:Core/Src/system_stm32f0xx.c ****     case RCC_CFGR_SWS_PLL:  /* PLL used as system clock */
 132              		.loc 1 188 7 is_stmt 1 view .LVU29
 133 0042 EFE7     		b	.L6
 134              	.LVL12:
 135              	.L4:
 191:Core/Src/system_stm32f0xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 136              		.loc 1 191 7 view .LVU30
 191:Core/Src/system_stm32f0xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 137              		.loc 1 191 20 is_stmt 0 view .LVU31
 138 0044 0E4B     		ldr	r3, .L9
 139              	.LVL13:
 191:Core/Src/system_stm32f0xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 140              		.loc 1 191 20 view .LVU32
 141 0046 5C68     		ldr	r4, [r3, #4]
 142              	.LVL14:
 192:Core/Src/system_stm32f0xx.c ****       pllmull = ( pllmull >> 18) + 2;
 143              		.loc 1 192 7 is_stmt 1 view .LVU33
 192:Core/Src/system_stm32f0xx.c ****       pllmull = ( pllmull >> 18) + 2;
 144              		.loc 1 192 22 is_stmt 0 view .LVU34
 145 0048 5A68     		ldr	r2, [r3, #4]
 146              	.LVL15:
 193:Core/Src/system_stm32f0xx.c ****       predivfactor = (RCC->CFGR2 & RCC_CFGR2_PREDIV) + 1;
 147              		.loc 1 193 7 is_stmt 1 view .LVU35
 193:Core/Src/system_stm32f0xx.c ****       predivfactor = (RCC->CFGR2 & RCC_CFGR2_PREDIV) + 1;
 148              		.loc 1 193 27 is_stmt 0 view .LVU36
 149 004a A40C     		lsrs	r4, r4, #18
 150              	.LVL16:
 193:Core/Src/system_stm32f0xx.c ****       predivfactor = (RCC->CFGR2 & RCC_CFGR2_PREDIV) + 1;
 151              		.loc 1 193 27 view .LVU37
 152 004c 0F21     		movs	r1, #15
ARM GAS  C:\Users\PcLokcer\AppData\Local\Temp\ccbBgzfi.s 			page 8


 153 004e 0C40     		ands	r4, r1
 193:Core/Src/system_stm32f0xx.c ****       predivfactor = (RCC->CFGR2 & RCC_CFGR2_PREDIV) + 1;
 154              		.loc 1 193 15 view .LVU38
 155 0050 0234     		adds	r4, r4, #2
 156              	.LVL17:
 194:Core/Src/system_stm32f0xx.c **** 
 157              		.loc 1 194 7 is_stmt 1 view .LVU39
 194:Core/Src/system_stm32f0xx.c **** 
 158              		.loc 1 194 26 is_stmt 0 view .LVU40
 159 0052 DB6A     		ldr	r3, [r3, #44]
 194:Core/Src/system_stm32f0xx.c **** 
 160              		.loc 1 194 34 view .LVU41
 161 0054 1940     		ands	r1, r3
 194:Core/Src/system_stm32f0xx.c **** 
 162              		.loc 1 194 20 view .LVU42
 163 0056 0131     		adds	r1, r1, #1
 164              	.LVL18:
 196:Core/Src/system_stm32f0xx.c ****       {
 165              		.loc 1 196 7 is_stmt 1 view .LVU43
 196:Core/Src/system_stm32f0xx.c ****       {
 166              		.loc 1 196 10 is_stmt 0 view .LVU44
 167 0058 D303     		lsls	r3, r2, #15
 168 005a 06D5     		bpl	.L7
 199:Core/Src/system_stm32f0xx.c ****       }
 169              		.loc 1 199 9 is_stmt 1 view .LVU45
 199:Core/Src/system_stm32f0xx.c ****       }
 170              		.loc 1 199 37 is_stmt 0 view .LVU46
 171 005c 0A48     		ldr	r0, .L9+8
 172 005e FFF7FEFF 		bl	__aeabi_uidiv
 173              	.LVL19:
 199:Core/Src/system_stm32f0xx.c ****       }
 174              		.loc 1 199 52 view .LVU47
 175 0062 4443     		muls	r4, r0
 176              	.LVL20:
 199:Core/Src/system_stm32f0xx.c ****       }
 177              		.loc 1 199 25 view .LVU48
 178 0064 074B     		ldr	r3, .L9+4
 179 0066 1C60     		str	r4, [r3]
 180 0068 DCE7     		b	.L6
 181              	.LVL21:
 182              	.L7:
 217:Core/Src/system_stm32f0xx.c **** #endif /* STM32F042x6 || STM32F048xx || STM32F070x6 || 
 183              		.loc 1 217 9 is_stmt 1 view .LVU49
 217:Core/Src/system_stm32f0xx.c **** #endif /* STM32F042x6 || STM32F048xx || STM32F070x6 || 
 184              		.loc 1 217 44 is_stmt 0 view .LVU50
 185 006a 6201     		lsls	r2, r4, #5
 186              	.LVL22:
 217:Core/Src/system_stm32f0xx.c **** #endif /* STM32F042x6 || STM32F048xx || STM32F070x6 || 
 187              		.loc 1 217 44 view .LVU51
 188 006c 121B     		subs	r2, r2, r4
 189 006e 9301     		lsls	r3, r2, #6
 190 0070 9B1A     		subs	r3, r3, r2
 191 0072 DB00     		lsls	r3, r3, #3
 192 0074 1C19     		adds	r4, r3, r4
 193              	.LVL23:
 217:Core/Src/system_stm32f0xx.c **** #endif /* STM32F042x6 || STM32F048xx || STM32F070x6 || 
 194              		.loc 1 217 44 view .LVU52
ARM GAS  C:\Users\PcLokcer\AppData\Local\Temp\ccbBgzfi.s 			page 9


 195 0076 2402     		lsls	r4, r4, #8
 217:Core/Src/system_stm32f0xx.c **** #endif /* STM32F042x6 || STM32F048xx || STM32F070x6 || 
 196              		.loc 1 217 25 view .LVU53
 197 0078 024B     		ldr	r3, .L9+4
 198 007a 1C60     		str	r4, [r3]
 199 007c D2E7     		b	.L6
 200              	.L10:
 201 007e C046     		.align	2
 202              	.L9:
 203 0080 00100240 		.word	1073876992
 204 0084 00000000 		.word	.LANCHOR0
 205 0088 00127A00 		.word	8000000
 206 008c 00000000 		.word	.LANCHOR1
 207              		.cfi_endproc
 208              	.LFE41:
 210              		.global	APBPrescTable
 211              		.global	AHBPrescTable
 212              		.global	SystemCoreClock
 213              		.section	.data.SystemCoreClock,"aw"
 214              		.align	2
 215              		.set	.LANCHOR0,. + 0
 218              	SystemCoreClock:
 219 0000 00127A00 		.word	8000000
 220              		.section	.rodata.AHBPrescTable,"a"
 221              		.align	2
 222              		.set	.LANCHOR1,. + 0
 225              	AHBPrescTable:
 226 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\001\002\003\004\006"
 226      00000000 
 226      01020304 
 226      06
 227 000d 070809   		.ascii	"\007\010\011"
 228              		.section	.rodata.APBPrescTable,"a"
 229              		.align	2
 232              	APBPrescTable:
 233 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004"
 233      01020304 
 234              		.text
 235              	.Letext0:
 236              		.file 2 "c:\\users\\pclokcer\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@
 237              		.file 3 "c:\\users\\pclokcer\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@
 238              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 239              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x8.h"
ARM GAS  C:\Users\PcLokcer\AppData\Local\Temp\ccbBgzfi.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32f0xx.c
C:\Users\PcLokcer\AppData\Local\Temp\ccbBgzfi.s:16     .text.SystemInit:0000000000000000 $t
C:\Users\PcLokcer\AppData\Local\Temp\ccbBgzfi.s:24     .text.SystemInit:0000000000000000 SystemInit
C:\Users\PcLokcer\AppData\Local\Temp\ccbBgzfi.s:40     .text.SystemCoreClockUpdate:0000000000000000 $t
C:\Users\PcLokcer\AppData\Local\Temp\ccbBgzfi.s:47     .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
C:\Users\PcLokcer\AppData\Local\Temp\ccbBgzfi.s:203    .text.SystemCoreClockUpdate:0000000000000080 $d
C:\Users\PcLokcer\AppData\Local\Temp\ccbBgzfi.s:232    .rodata.APBPrescTable:0000000000000000 APBPrescTable
C:\Users\PcLokcer\AppData\Local\Temp\ccbBgzfi.s:225    .rodata.AHBPrescTable:0000000000000000 AHBPrescTable
C:\Users\PcLokcer\AppData\Local\Temp\ccbBgzfi.s:218    .data.SystemCoreClock:0000000000000000 SystemCoreClock
C:\Users\PcLokcer\AppData\Local\Temp\ccbBgzfi.s:214    .data.SystemCoreClock:0000000000000000 $d
C:\Users\PcLokcer\AppData\Local\Temp\ccbBgzfi.s:221    .rodata.AHBPrescTable:0000000000000000 $d
C:\Users\PcLokcer\AppData\Local\Temp\ccbBgzfi.s:229    .rodata.APBPrescTable:0000000000000000 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
